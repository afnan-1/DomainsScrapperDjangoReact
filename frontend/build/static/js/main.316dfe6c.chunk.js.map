{"version":3,"sources":["logo.svg","components/Header.js","actions/domains.js","components/AllDomains.js","components/FilteredDomains.js","screens/Home.js","screens/RandomAppraisal.js","screens/RandomDomain.js","screens/DomainNow.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","href","type","id","to","domains","limit","axios","get","err","AllDomains","other","otherLoader","class","scope","colSpan","map","v","i","FilteredDomains","loader","history","useHistory","location","pathname","startsWith","domain","Estimated_price","Home","useState","price","setPrice","domainNo","setDomainNo","scrapedResults","setScrapedResults","filteredResults","setFilteredResults","setLoader","filterLoader","setFilterLoader","onSubmit","e","preventDefault","then","res","data","timeout","filteredDomains","htmlFor","value","placeholder","onChange","target","RandomAppraisal","random_appraisal_domains","RandomDomain","domainLength","setDomainLength","contains","randomWords","setRandomWords","generatedWords","setGeneratedWords","words","rword","generate","Number","length","newArr","push","post","headers","DomainNow","domainNow","App","path","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"ieAAe,I,qBCsDAA,MApDf,WACE,OACE,qBAAKC,UAAU,8CAAf,SACE,sBAAKA,UAAU,kBAAf,UACE,mBAAGA,UAAU,eAAeC,KAAK,IAAjC,4BAGA,wBACED,UAAU,iBACVE,KAAK,SACL,iBAAe,WACf,iBAAe,0BACf,gBAAc,yBACd,gBAAc,QACd,aAAW,oBAPb,SASE,sBAAMF,UAAU,0BAElB,qBAAKA,UAAU,2BAA2BG,GAAG,yBAA7C,SACE,qBAAIH,UAAU,kCAAd,UACE,oBAAIA,UAAU,WAAd,SACE,cAAC,IAAD,CAAMA,UAAU,kBAAkB,eAAa,OAAOI,GAAG,IAAzD,sCAIF,oBAAIJ,UAAU,WAAd,SACE,cAAC,IAAD,CAAMA,UAAU,WAAWI,GAAG,yBAA9B,uCAIF,oBAAIJ,UAAU,WAAd,SACE,cAAC,IAAD,CAAMA,UAAU,WAAWI,GAAG,uBAA9B,oCAIF,oBAAIJ,UAAU,WAAd,SACE,cAAC,IAAD,CAAMA,UAAU,WAAWI,GAAG,aAA9B,gDAIF,oBAAIJ,UAAU,WAAd,SACE,mBAAGA,UAAU,WAAWC,KAAK,SAA7B,sC,uCChCDI,EAAU,SAACC,GACtB,IAEE,OADYC,IAAMC,IAAN,uBAA0BF,IAEtC,MAAOG,GACP,MAAO,kCCgBIC,MA9Bf,YAA6C,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,YAC3B,OACE,gCACE,oBAAIZ,UAAU,cAAd,8BACA,wBAAOa,MAAM,sBAAb,UACE,gCACE,+BACE,oBAAIC,MAAM,MAAV,eACA,oBAAIA,MAAM,MAAV,8BAGJ,gCACIF,EAQA,6BACE,oBAAIG,QAAQ,IAAZ,0BARFJ,EAAMK,KAAI,SAACC,EAAGC,GAAJ,OACR,+BACE,oBAAIJ,MAAM,MAAV,SAAiBI,EAAI,IACrB,6BAAKD,MAFEC,eCwBRC,MArCf,YAA+C,IAApBC,EAAmB,EAAnBA,OAAQf,EAAW,EAAXA,QAC3BgB,EAAUC,cAChB,OACE,gCACE,oBAAItB,UAAU,cAAd,SACGqB,EAAQE,SAASC,SAASC,WAAW,WAClC,wBACA,2BAEN,wBAAOZ,MAAM,sBAAb,UACE,gCACE,+BACE,oBAAIC,MAAM,MAAV,eACA,oBAAIA,MAAM,MAAV,yBACA,oBAAIA,MAAM,MAAV,kCAGJ,gCACIM,EASA,6BACE,oBAAIL,QAAQ,IAAZ,0BATFV,EAAQW,KAAI,SAACC,EAAGC,GAAJ,OACV,+BACE,oBAAIJ,MAAM,MAAV,SAAiBI,EAAI,IACrB,6BAAKD,EAAES,SACP,mCAAMT,EAAEU,qBAHDT,eCgDRU,MAnEf,WACE,MAA0BC,mBAAS,KAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAA4CJ,mBAAS,IAArD,mBAAOK,EAAP,KAAuBC,EAAvB,KACA,EAA8CN,mBAAS,IAAvD,mBAAOO,EAAP,KAAwBC,EAAxB,KACA,EAA4BR,oBAAS,GAArC,mBAAOT,EAAP,KAAekB,EAAf,KACA,EAAwCT,oBAAS,GAAjD,mBAAOU,EAAP,KAAqBC,EAArB,KAcA,OACE,sBAAKxC,UAAU,iBAAf,UACE,oBAAIA,UAAU,cAAd,iDACA,uBAAMyC,SAhBW,SAACC,GACpBA,EAAEC,iBACFL,GAAU,GACVE,GAAgB,GAChBnC,EAAQ2B,GAAUY,MAAK,SAACC,GACtBV,EAAkB,YAAIU,EAAIC,KAAKA,OAC/BR,GAAU,GHfe,SAACR,GAC9B,IAEE,OADYvB,IAAMC,IAAN,6BAAgCsB,GAAS,CAAEiB,QAAS,MAEhE,MAAOtC,GACP,MAAO,iCGWLuC,CAAgBlB,GAAOc,MAAK,SAACC,GAC3BR,EAAmBQ,EAAIC,KAAKzC,SAC5BmC,GAAgB,UAOlB,UACE,sBAAKxC,UAAU,OAAf,UACE,wBAAOiD,QAAQ,QAAQjD,UAAU,aAAjC,sCAC2B,0DAE3B,uBACEE,KAAK,OACLF,UAAU,eACVG,GAAG,QACH+C,MAAOpB,EACPqB,YAAY,OACZC,SAAU,SAACV,GAAD,OAAOX,EAASW,EAAEW,OAAOH,aAGvC,sBAAKlD,UAAU,OAAf,UACE,wBAAOiD,QAAQ,QAAQjD,UAAU,aAAjC,2EACiE,IAC/D,uDAEF,uBACEE,KAAK,OACLF,UAAU,eACVG,GAAG,QACHgD,YAAY,KACZD,MAAOlB,EACPoB,SAAU,SAACV,GAAD,OAAOT,EAAYS,EAAEW,OAAOH,aAG1C,wBAAQlD,UAAU,uBAAuBE,KAAK,SAA9C,uBAIF,sBAAKF,UAAU,MAAf,UACE,qBAAKA,UAAU,MAAf,SACE,cAAC,EAAD,CAASW,MAAOuB,EAAgBtB,YAAaQ,MAE/C,qBAAKpB,UAAU,MAAf,SACI,cAAC,EAAD,CAAiBK,QAAS+B,EAAiBhB,OAAQmB,aCShDe,MArEf,WACE,MAA0BzB,mBAAS,KAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAA4CJ,mBAAS,IAArD,mBAAOK,EAAP,KAAuBC,EAAvB,KACA,EAA8CN,mBAAS,IAAvD,mBAAOO,EAAP,KAAwBC,EAAxB,KACA,EAA4BR,oBAAS,GAArC,mBAAOT,EAAP,KAAekB,EAAf,KACA,EAAwCT,oBAAS,GAAjD,mBAAOU,EAAP,KAAqBC,EAArB,KAcA,OACE,sBAAKxC,UAAU,iBAAf,UACE,oBAAIA,UAAU,cAAd,gDAEA,uBAAMyC,SAjBW,SAACC,GACpBA,EAAEC,iBACFL,GAAU,GACVE,GAAgB,GAChBnC,EAAQ2B,GAAUY,MAAK,SAACC,GACtBV,EAAkB,YAAIU,EAAIC,KAAKA,OAC/BR,GAAU,GJGwB,SAACR,GAEvC,OADYvB,IAAMC,IAAN,+BAAkCsB,GAAS,CAAEiB,QAAS,MIH9DQ,CAAyBzB,GAAOc,MAAK,SAACC,GACpCR,EAAmBQ,EAAIC,KAAKzC,SAC5BmC,GAAgB,UAQlB,UACE,sBAAKxC,UAAU,OAAf,UACE,wBAAOiD,QAAQ,QAAQjD,UAAU,aAAjC,sCAC2B,0DAE3B,uBACEE,KAAK,OACLF,UAAU,eACVG,GAAG,QACH+C,MAAOpB,EACPqB,YAAY,OACZC,SAAU,SAACV,GAAD,OAAOX,EAASW,EAAEW,OAAOH,aAGvC,sBAAKlD,UAAU,OAAf,UACE,wBAAOiD,QAAQ,QAAQjD,UAAU,aAAjC,2EACiE,IAC/D,uDAEF,uBACEE,KAAK,OACLF,UAAU,eACVG,GAAG,QACHgD,YAAY,KACZD,MAAOlB,EACPoB,SAAU,SAACV,GAAD,OAAOT,EAAYS,EAAEW,OAAOH,aAG1C,wBAAQlD,UAAU,uBAAuBE,KAAK,SAA9C,uBAKF,sBAAKF,UAAU,MAAf,UACE,qBAAKA,UAAU,MAAf,SACE,cAAC,EAAD,CAASW,MAAOuB,EAAgBtB,YAAaQ,MAE/C,qBAAKpB,UAAU,MAAf,SACE,cAAC,EAAD,CAAiBK,QAAS+B,EAAiBhB,OAAQmB,a,QCiE9CiB,MA/Hf,WACE,MAAwC3B,mBAAS,GAAjD,mBAAO4B,EAAP,KAAqBC,EAArB,KACA,EAAgC7B,mBAAS,GAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAAgCJ,mBAAS,IAAzC,mBAAO8B,EAAP,KACA,GADA,KACsC9B,mBAAS,KAA/C,mBAAO+B,EAAP,KAAoBC,EAApB,KACA,EAA4ChC,mBAAS,IAArD,mBAAOiC,EAAP,KAAuBC,EAAvB,KACA,EAA4BlC,oBAAS,GAArC,mBAAOT,EAAP,KAAekB,EAAf,KAkCA,OACE,sBAAKtC,UAAU,iBAAf,UACE,yDACA,uBAAMyC,SApCW,SAACC,GAKpB,IAAIsB,EAJJtB,EAAEC,iBACFL,GAAU,GACVuB,EAAe,IACfE,EAAkB,IAGhBC,EADe,KAAbL,EACMM,QAAMC,SAASC,OAAOnC,GAAW,CACvCoC,OAAQD,OAAOV,KAGTQ,QAAMC,SAASC,OAAOnC,GAAW,CACvCoC,OAAQD,OAAOV,GACfE,SAAUA,IAGd,ILFkCtD,EKE9BgE,EAAS,GACbL,EAAMhD,KAAI,SAACC,EAAGC,GACZmD,EAAOC,KAAKrD,EAAI,QAChBoD,EAAOC,KAAKrD,EAAI,UAChBoD,EAAOC,KAAKrD,EAAI,WAElB8C,EAAkB,GAAD,OAAKM,KLRYhE,EKSZ2D,ELHZzD,IAAMgE,KAAN,4BAAwC,CAAElE,QAASA,GALhD,CACbmE,QAAS,CACL,eAAgB,uBKMS5B,MAAK,SAACC,GAAD,OAASgB,EAAe,YAAIhB,EAAIC,WAahE,UACE,sBAAK9C,UAAU,OAAf,UACE,wBAAOiD,QAAQ,QAAQjD,UAAU,aAAjC,qCAC0B,gDAE1B,uBACEE,KAAK,OACLF,UAAU,eACVG,GAAG,QACH+C,MAAOlB,EACPmB,YAAY,IACZC,SAtBO,SAACV,GACZA,EAAEW,OAAOH,OAAO,GAChBjB,EAAY,IAGZA,EAAYS,EAAEW,OAAOH,aAoBrB,sBAAKlD,UAAU,OAAf,UACE,wBAAOiD,QAAQ,QAAQjD,UAAU,aAAjC,oCACyB,oDAEzB,uBACEE,KAAK,OACLF,UAAU,eACVG,GAAG,QACHgD,YAAY,IACZD,MAAOO,EACPL,SAAU,SAACV,GAAD,OAAOgB,EAAgBhB,EAAEW,OAAOH,aAG9C,wBAAQlD,UAAU,uBAAuBE,KAAK,SAA9C,yBAIF,sBAAKF,UAAU,MAAf,UACE,qBAAKA,UAAU,MAAf,SACE,wBAAOa,MAAM,sBAAb,UACE,gCACE,+BACE,oBAAIC,MAAM,MAAV,eACA,oBAAIA,MAAM,MAAV,oCAGJ,gCACGgD,EAAeM,OAAS,GACvBN,EAAe9C,KAAI,SAACC,EAAGC,GACrB,OACE,+BACE,oBAAIJ,MAAM,MAAV,SAAiBI,EAAI,IACrB,6BAAKD,MAFEC,aASrB,qBAAKlB,UAAU,MAAf,SACE,wBAAOa,MAAM,sBAAb,UACE,gCACE,+BACE,oBAAIC,MAAM,MAAV,eACA,oBAAIA,MAAM,MAAV,oCAGJ,gCACG8C,EAAYQ,OAAS,EACpBR,EAAY5C,KAAI,SAACC,EAAGC,GAClB,OACE,+BACE,oBAAIJ,MAAM,MAAV,SAAiBI,EAAI,IACrB,6BAAKD,MAFEC,MAOb,6BACE,oBAAIH,QAAQ,IAAZ,SAAiBK,GAAU,+BCxC9BqD,MA5Ef,WACE,MAA0B5C,mBAAS,KAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAA4CJ,mBAAS,IAArD,mBAAOK,EAAP,KAAuBC,EAAvB,KACA,EAA8CN,mBAAS,IAAvD,mBAAOO,EAAP,KAAwBC,EAAxB,KACA,EAA4BR,oBAAS,GAArC,mBAAOT,EAAP,KAAekB,EAAf,KACA,EAAwCT,oBAAS,GAAjD,mBAAOU,EAAP,KAAqBC,EAArB,KAqBA,OACE,sBAAKxC,UAAU,iBAAf,UACE,oBAAIA,UAAU,cAAd,gDAEA,uBAAMyC,SAxBW,SAACC,GACpBA,EAAEC,iBACFL,GAAU,GACVE,GAAgB,GAChBnC,EAAQ2B,GAAUY,MAAK,SAACC,GACtBV,EAAkB,YAAIU,EAAIC,KAAKA,OAC/BR,GAAU,GNkBS,SAACR,GAExB,OADYvB,IAAMC,IAAN,yBAA4BsB,IMlBpC4C,CAAU5C,GAAOc,MAAK,SAACC,GACrBR,EAAmBQ,EAAIC,KAAKzC,SAC5BmC,GAAgB,UAelB,UACE,sBAAKxC,UAAU,OAAf,UACE,wBAAOiD,QAAQ,QAAQjD,UAAU,aAAjC,sCAC2B,0DAE3B,uBACEE,KAAK,OACLF,UAAU,eACVG,GAAG,QACH+C,MAAOpB,EACPqB,YAAY,OACZC,SAAU,SAACV,GAAD,OAAOX,EAASW,EAAEW,OAAOH,aAGvC,sBAAKlD,UAAU,OAAf,UACE,wBAAOiD,QAAQ,QAAQjD,UAAU,aAAjC,2EACiE,IAC/D,mDAEF,uBACEE,KAAK,OACLF,UAAU,eACVG,GAAG,QACHgD,YAAY,KACZD,MAAOlB,EACPoB,SApCW,SAACV,GAChBA,EAAEW,OAAOH,OAAS,GACpBjB,EAAY,IAEZA,EAAYS,EAAEW,OAAOH,aAmCnB,wBAAQlD,UAAU,uBAAuBE,KAAK,SAA9C,uBAKF,sBAAKF,UAAU,MAAf,UACE,qBAAKA,UAAU,MAAf,SACE,cAAC,EAAD,CAASW,MAAOuB,EAAgBtB,YAAaQ,MAE/C,qBAAKpB,UAAU,MAAf,SACE,cAAC,EAAD,CAAiBK,QAAS+B,EAAiBhB,OAAQmB,aCnD9CoC,MAdf,WACE,OACE,eAAC,IAAD,WACE,cAAC,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAWlD,IACjC,cAAC,IAAD,CAAOgD,KAAK,uBAAuBC,OAAK,EAACC,UAAWxB,IACpD,cAAC,IAAD,CAAOsB,KAAK,yBAAyBC,OAAK,EAACC,UAAWtB,IACtD,cAAC,IAAD,CAAOoB,KAAK,aAAaC,OAAK,EAACC,UAAWL,WCJnCM,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBrC,MAAK,YAAkD,IAA/CsC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.316dfe6c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nfunction Header() {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href=\"#\">\r\n          Domain Scraper\r\n        </a>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\" />\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">\r\n                Go Daddy appraise Tool\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" to=\"/randomdomaingenerator\">\r\n                Random Domain Generator\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" to=\"/randomappraisaltool\">\r\n                Random Appraise Tool\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" to=\"/domainnow\">\r\n                25 Domains per request Appraisal\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link\" href=\"/admin\">\r\n                Admin Panel\r\n              </a>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import axios from \"axios\";\r\nconst API_URL = \"http://127.0.0.1:8000\";\r\nexport const filteredDomains = (price) => {\r\n  try {\r\n    const res = axios.get(`/api/domainsfilter/${price}`, { timeout: 1000000 });\r\n    return res;\r\n  } catch (err) {\r\n    return \"Server Error Please Try Later\";\r\n  }\r\n};\r\n\r\nexport const domains = (limit) => {\r\n  try {\r\n    const res = axios.get(`/api/domains/${limit}`);\r\n    return res;\r\n  } catch (err) {\r\n    return \"Server Error Please Try Later\";\r\n  }\r\n};\r\n\r\nexport const random_appraisal_domains = (price) => {\r\n  const res = axios.get(`/api/randomappraisal/${price}`, { timeout: 1000000 });\r\n  return res;\r\n};\r\n\r\nexport const randomDomainGenerator = (domains) => {\r\n  const config = {\r\n    headers: {\r\n        'Content-type': 'application/json',\r\n    }\r\n}\r\n  const res = axios.post(`/api/randomdomainchecker/`, { domains: domains },config);\r\n  return res;\r\n};\r\n\r\nexport const domainNow = (price) => {\r\n  const res = axios.get(`/api/domainnow/${price}`);\r\n  return res;\r\n};\r\n","import React from \"react\";\r\n\r\nfunction AllDomains({ other, otherLoader }) {\r\n  return (\r\n    <div>\r\n      <h4 className=\"text-center\"> Deleted Domains</h4>\r\n      <table class=\"table table-striped\">\r\n        <thead>\r\n          <tr>\r\n            <th scope=\"col\">#</th>\r\n            <th scope=\"col\">Domain Name</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {!otherLoader ? (\r\n            other.map((v, i) => (\r\n              <tr key={i}>\r\n                <th scope=\"row\">{i + 1}</th>\r\n                <td>{v}</td>\r\n              </tr>\r\n            ))\r\n          ) : (\r\n            <tr>\r\n              <th colSpan=\"3\">Loading...</th>\r\n            </tr>\r\n          )}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AllDomains;\r\n","import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction FilteredDomains({ loader, domains }) {\r\n  const history = useHistory();\r\n  return (\r\n    <div>\r\n      <h4 className=\"text-center\">\r\n        {history.location.pathname.startsWith(\"/random\")\r\n          ? \"Random Appraisal Tool\"\r\n          : \"Godaddy Appraisal Tool\"}\r\n      </h4>\r\n      <table class=\"table table-striped\">\r\n        <thead>\r\n          <tr>\r\n            <th scope=\"col\">#</th>\r\n            <th scope=\"col\">Domain Name</th>\r\n            <th scope=\"col\">Appraisal value</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {!loader ? (\r\n            domains.map((v, i) => (\r\n              <tr key={i}>\r\n                <th scope=\"row\">{i + 1}</th>\r\n                <td>{v.domain}</td>\r\n                <td>${v.Estimated_price}</td>\r\n              </tr>\r\n            ))\r\n          ) : (\r\n            <tr>\r\n              <th colSpan=\"3\">Loading...</th>\r\n            </tr>\r\n          )}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FilteredDomains;\r\n","import React, { useState } from \"react\";\r\nimport { domains, filteredDomains } from \"../actions/domains\";\r\nimport Results from \"../components/AllDomains\";\r\nimport FilteredDomains from \"../components/FilteredDomains\";\r\nfunction Home() {\r\n  const [price, setPrice] = useState(2000);\r\n  const [domainNo, setDomainNo] = useState(50);\r\n  const [scrapedResults, setScrapedResults] = useState([]);\r\n  const [filteredResults, setFilteredResults] = useState([]);\r\n  const [loader, setLoader] = useState(false);\r\n  const [filterLoader, setFilterLoader] = useState(false);\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setLoader(true);\r\n    setFilterLoader(true);\r\n    domains(domainNo).then((res) => {\r\n      setScrapedResults([...res.data.data]);\r\n      setLoader(false);\r\n      filteredDomains(price).then((res) => {\r\n        setFilteredResults(res.data.domains);\r\n        setFilterLoader(false);\r\n      });\r\n    });\r\n  };\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <h2 className=\"text-center\">Domain Checker on Godaddy Appraisal</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"price\" className=\"form-label\">\r\n            Enter appraisal value in <small>(Default is $2000)</small>\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"price\"\r\n            value={price}\r\n            placeholder=\"2000\"\r\n            onChange={(e) => setPrice(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"limit\" className=\"form-label\">\r\n            Please enter no of domains you want to check on appraisal tool{\" \"}\r\n            <small>(Default is 50)</small>\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"limit\"\r\n            placeholder=\"50\"\r\n            value={domainNo}\r\n            onChange={(e) => setDomainNo(e.target.value)}\r\n          />\r\n        </div>\r\n        <button className=\"btn btn-primary mt-4\" type=\"submit\">\r\n          Search\r\n        </button>\r\n      </form>\r\n      <div className=\"row\">\r\n        <div className=\"col\">\r\n          <Results other={scrapedResults} otherLoader={loader} />\r\n        </div>\r\n        <div className=\"col\">\r\n            <FilteredDomains domains={filteredResults} loader={filterLoader} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React,{useState} from \"react\";\r\nimport { domains, filteredDomains, random_appraisal_domains } from \"../actions/domains\";\r\nimport Results from \"../components/AllDomains\";\r\nimport FilteredDomains from \"../components/FilteredDomains\";\r\nfunction RandomAppraisal() {\r\n  const [price, setPrice] = useState(2000);\r\n  const [domainNo, setDomainNo] = useState(50);\r\n  const [scrapedResults, setScrapedResults] = useState([]);\r\n  const [filteredResults, setFilteredResults] = useState([]);\r\n  const [loader, setLoader] = useState(false);\r\n  const [filterLoader, setFilterLoader] = useState(false);\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setLoader(true);\r\n    setFilterLoader(true);\r\n    domains(domainNo).then((res) => {\r\n      setScrapedResults([...res.data.data]);\r\n      setLoader(false);\r\n      random_appraisal_domains(price).then((res) => {\r\n        setFilteredResults(res.data.domains);\r\n        setFilterLoader(false);\r\n      });\r\n    });\r\n  };\r\n  return (\r\n    <div className='container mt-5'>\r\n      <h2 className=\"text-center\">Domain Checker on Random Appraisal</h2>\r\n\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"price\" className=\"form-label\">\r\n            Enter appraisal value in <small>(Default is $2000)</small>\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"price\"\r\n            value={price}\r\n            placeholder=\"2000\"\r\n            onChange={(e) => setPrice(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"limit\" className=\"form-label\">\r\n            Please enter no of domains you want to check on appraisal tool{\" \"}\r\n            <small>(Default is 50)</small>\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"limit\"\r\n            placeholder=\"50\"\r\n            value={domainNo}\r\n            onChange={(e) => setDomainNo(e.target.value)}\r\n          />\r\n        </div>\r\n        <button className=\"btn btn-primary mt-4\" type=\"submit\">\r\n          Search\r\n        </button>\r\n      </form>\r\n\r\n      <div className=\"row\">\r\n        <div className=\"col\">\r\n          <Results other={scrapedResults} otherLoader={loader} />\r\n        </div>\r\n        <div className=\"col\">\r\n          <FilteredDomains domains={filteredResults} loader={filterLoader} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RandomAppraisal;\r\n","import React, { useState } from \"react\";\r\nimport { rword } from \"rword\";\r\nimport { randomDomainGenerator } from \"../actions/domains\";\r\n\r\nfunction RandomDomain() {\r\n  const [domainLength, setDomainLength] = useState(5);\r\n  const [domainNo, setDomainNo] = useState(5);\r\n  const [contains, setContains] = useState(\"\");\r\n  const [randomWords, setRandomWords] = useState([]);\r\n  const [generatedWords, setGeneratedWords] = useState([]);\r\n  const [loader, setLoader] = useState(false);\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setLoader(true);\r\n    setRandomWords([]);\r\n    setGeneratedWords([]);\r\n    let words;\r\n    if (contains === \"\") {\r\n      words = rword.generate(Number(domainNo), {\r\n        length: Number(domainLength),\r\n      });\r\n    } else {\r\n      words = rword.generate(Number(domainNo), {\r\n        length: Number(domainLength),\r\n        contains: contains,\r\n      });\r\n    }\r\n    let newArr = [];\r\n    words.map((v, i) => {\r\n      newArr.push(v + \".com\");\r\n      newArr.push(v + \".co.uk\");\r\n      newArr.push(v + \".org\");\r\n    });\r\n    setGeneratedWords([...newArr]);\r\n    randomDomainGenerator(words).then((res) => setRandomWords([...res.data]));\r\n  };\r\nconst handleChange=(e)=>{\r\n    if (e.target.value>=25){\r\n        setDomainNo(25)\r\n    }\r\n    else{\r\n        setDomainNo(e.target.value)\r\n    }\r\n}\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <h2>Random Domain Generator</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"price\" className=\"form-label\">\r\n            Enter Number of Domains <small>(Max(5))</small>\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"price\"\r\n            value={domainNo}\r\n            placeholder=\"5\"\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"limit\" className=\"form-label\">\r\n            Enter length of domain <small>(Example(4))</small>\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"limit\"\r\n            placeholder=\"4\"\r\n            value={domainLength}\r\n            onChange={(e) => setDomainLength(e.target.value)}\r\n          />\r\n        </div>\r\n        <button className=\"btn btn-primary mt-4\" type=\"submit\">\r\n          Generate\r\n        </button>\r\n      </form>\r\n      <div className=\"row\">\r\n        <div className=\"col\">\r\n          <table class=\"table table-striped\">\r\n            <thead>\r\n              <tr>\r\n                <th scope=\"col\">#</th>\r\n                <th scope=\"col\">Generated Domains</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {generatedWords.length > 0 &&\r\n                generatedWords.map((v, i) => {\r\n                  return (\r\n                    <tr key={i}>\r\n                      <th scope=\"row\">{i + 1}</th>\r\n                      <td>{v}</td>\r\n                    </tr>\r\n                  );\r\n                })}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n        <div className=\"col\">\r\n          <table class=\"table table-striped\">\r\n            <thead>\r\n              <tr>\r\n                <th scope=\"col\">#</th>\r\n                <th scope=\"col\">Availible Domains</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {randomWords.length > 0 ? (\r\n                randomWords.map((v, i) => {\r\n                  return (\r\n                    <tr key={i}>\r\n                      <th scope=\"row\">{i + 1}</th>\r\n                      <td>{v}</td>\r\n                    </tr>\r\n                  );\r\n                })\r\n              ) : (\r\n                <tr>\r\n                  <th colSpan=\"2\">{loader && \"Loading...\"}</th>\r\n                </tr>\r\n              )}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RandomDomain;\r\n","import React, { useState } from \"react\";\r\nimport { domainNow, domains } from \"../actions/domains\";\r\nimport Results from \"../components/AllDomains\";\r\nimport FilteredDomains from \"../components/FilteredDomains\";\r\nfunction DomainNow() {\r\n  const [price, setPrice] = useState(2000);\r\n  const [domainNo, setDomainNo] = useState(25);\r\n  const [scrapedResults, setScrapedResults] = useState([]);\r\n  const [filteredResults, setFilteredResults] = useState([]);\r\n  const [loader, setLoader] = useState(false);\r\n  const [filterLoader, setFilterLoader] = useState(false);\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setLoader(true);\r\n    setFilterLoader(true);\r\n    domains(domainNo).then((res) => {\r\n      setScrapedResults([...res.data.data]);\r\n      setLoader(false);\r\n      domainNow(price).then((res) => {\r\n        setFilteredResults(res.data.domains);\r\n        setFilterLoader(false);\r\n      });\r\n    });\r\n  };\r\n  const handleChange = (e) => {\r\n    if (e.target.value >= 25) {\r\n      setDomainNo(25);\r\n    } else {\r\n      setDomainNo(e.target.value);\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <h2 className=\"text-center\">Domain Checker on Random Appraisal</h2>\r\n\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"price\" className=\"form-label\">\r\n            Enter appraisal value in <small>(Default is $2000)</small>\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"price\"\r\n            value={price}\r\n            placeholder=\"2000\"\r\n            onChange={(e) => setPrice(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"limit\" className=\"form-label\">\r\n            Please enter no of domains you want to check on appraisal tool{\" \"}\r\n            <small>(MAX is 25)</small>\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"limit\"\r\n            placeholder=\"50\"\r\n            value={domainNo}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <button className=\"btn btn-primary mt-4\" type=\"submit\">\r\n          Search\r\n        </button>\r\n      </form>\r\n\r\n      <div className=\"row\">\r\n        <div className=\"col\">\r\n          <Results other={scrapedResults} otherLoader={loader} />\r\n        </div>\r\n        <div className=\"col\">\r\n          <FilteredDomains domains={filteredResults} loader={filterLoader} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DomainNow;\r\n","import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Header from \"./components/Header\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Home from \"./screens/Home\";\nimport RandomAppraisal from \"./screens/RandomAppraisal\";\nimport RandomDomain from \"./screens/RandomDomain\";\nimport DomainNow from \"./screens/DomainNow\";\nfunction App() {\n  return (\n    <Router>\n      <Header />\n      <Switch>\n        <Route path=\"/\" exact component={Home}></Route>\n        <Route path=\"/randomappraisaltool\" exact component={RandomAppraisal} />\n        <Route path=\"/randomdomaingenerator\" exact component={RandomDomain} />\n        <Route path=\"/domainnow\" exact component={DomainNow} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}